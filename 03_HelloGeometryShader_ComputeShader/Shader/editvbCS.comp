#version 450

layout(local_size_x=1, local_size_y=1, local_size_z=1) in;

struct PositionNormal
{
	vec4 pos;
	vec4 normal;
};

// std430はhttps://www.khronos.org/opengl/wiki/Interface_Block_(GLSL)
layout(set=0, binding=0, std430) buffer
Vertex
{
	PositionNormal posnormal[];
} vertices;

layout(set=0, binding=1) uniform
Counter // コンピュートシェーダではUniformBufferもこういう構造体形式でないと使えない
{
	uint value;
} counter;

void main()
{
	if (counter.value > 0)
	{
		// 前フレームの値をひく
		vertices.posnormal[gl_GlobalInvocationID.x].pos.y -= 1.0f * sin((counter.value - 1) * 0.1f); // 60FPSだと一秒で6ラジアンでほぼ2π
	}

	// 今フレームの値をたす
	vertices.posnormal[gl_GlobalInvocationID.x].pos.y += 1.0f * sin(counter.value * 0.1f); // 60FPSだと一秒で6ラジアンでほぼ2π
}

